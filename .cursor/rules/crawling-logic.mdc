---
globs: "src/crawlers/*,scripts/crawl_news.py"
description: "네이버 뉴스 크롤링 로직 구현 가이드"
---

# 네이버 뉴스 크롤링 로직

## 🔍 크롤링 방식

### 1. Naver Open API 크롤링
- **API 엔드포인트**: `https://openapi.naver.com/v1/search/news.json`
- **검색 키워드**: `충격`, `공포`, `반전`
- **필수 헤더**: `X-Naver-Client-Id`, `X-Naver-Client-Secret`
- **파라미터**: `query`, `display`, `start`, `sort`

### 2. 네이버 엔터 뉴스 크롤링
- **타겟 URL**: `https://m.entertain.naver.com/ranking/sympathy/surprise`
- **크롤링 방식**: BeautifulSoup을 사용한 HTML 파싱
- **추출 데이터**: 제목, 내용, 기자, 언론사, 발행시간, 네이버 URL

## 📊 데이터 추출 규칙

### 공통 필드 매핑
```python
article_data = {
    'title': str,           # 기사 제목
    'content': str,         # 기사 내용 (요약)
    'journalist_name': str, # 기자명
    'publisher': str,       # 언론사
    'published_at': datetime, # 발행시간
    'naver_url': str,       # 네이버 뉴스 URL
}
```

### 기자 정보 처리
- 기자명이 없는 경우 "익명" 처리
- 기자 정보 중복 제거 (naver_uuid 기준)
- 언론사와 기자명 조합으로 유니크 체크

## 🛠️ 구현 가이드라인

### 에러 핸들링
- **네트워크 타임아웃**: 30초 제한
- **Rate Limiting**: API 호출 간격 1초 대기
- **파싱 실패**: 개별 뉴스 파싱 실패 시 로그 기록 후 다음 뉴스 처리
- **중복 처리**: 동일 URL 기사 스킵

### 로깅 규칙
- 크롤링 시작/종료 시간 기록
- 처리된 기사 수 및 실패 수 기록
- 중복 기사 스킵 로그
- API 호출 실패 상세 로그

### 데이터 검증
- 제목 최소 길이: 10자
- 내용 최소 길이: 50자
- 발행시간 유효성 검사
- URL 형식 검증

## 🔄 크롤링 전략

### 배치 처리
- 날짜별 크롤링 (입력 파라미터)
- 페이지네이션 처리 (API 기준 최대 100개)
- 메모리 효율적인 배치 단위 처리

### 중복 방지
- 네이버 URL 기준 중복 체크
- 제목 + 언론사 조합 유사도 검사
- 발행시간 기준 시간 윈도우 내 중복 제거

## 📈 성능 최적화

### 동시성 처리
- 언론사별 동시 크롤링 (최대 5개)
- 비동기 HTTP 요청 활용
- 메모리 사용량 모니터링

### 캐싱 전략
- 이미 처리된 URL 캐싱
- 기자 정보 메모리 캐싱
- 언론사 정보 사전 로딩
